const ll N = 200001;
ll t[4 * N];
void build(vector<ll> &a, ll v, ll tl, ll tr)
{
    if (tl == tr)
    {
        t[v] = a[tl];
    }
    else
    {
        ll tm = (tl + tr) / 2;
        build(a, v * 2, tl, tm);
        build(a, v * 2 + 1, tm + 1, tr);
        t[v] = min(t[v * 2], t[v * 2 + 1]);
    }
}
ll find_min(ll v, ll tl, ll tr, ll l, ll r)
{
    if (l <= tl && tr <= r)
    {
        return t[v];
    }
    else
    {
        ll ans = inf;
        ll tm = (tl + tr) / 2;
        if (l <= tm)
        {
            ans = min(ans, find_min(2 * v, tl, tm, l, r));
        }
        if (r >= tm + 1)
        {
            ans = min(ans, find_min(2 * v + 1, tm + 1, tr, l, r));
        }
        return ans;
    }
}
void update(ll v, ll tl, ll tr, ll pos, ll new_val)
{
    if (tl == tr)
    {
        t[v] = new_val;
    }
    else
    {
        ll tm = (tl + tr) / 2;
        if (pos <= tm)
            update(v * 2, tl, tm, pos, new_val);
        else
            update(v * 2 + 1, tm + 1, tr, pos, new_val);
        t[v] = min(t[v * 2], t[v * 2 + 1]);
    }
}